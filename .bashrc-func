#!/bin/bash -e

# linux only
function get_fs()
{
	local p="."
	local i=1
	while [ $i -le $# ];
	do
		if echo ${@: $i:1} | grep -qv "-"; then
			p=${@: $i:1}
			break
		fi
		i=$(( $i + 1 ))
	done

	echo $(stat -f -c %T $p)
}

function ls-btrfs()
{
	local fs=$(get_fs $@)
	if [ $fs == 'btrfs' ]; then
		# gsub(/\x1B\[[0-9;]*[a-zA-Z]/,"", dir) -> clear ANSI color text
		# gensub -> keep space while replacement
		\ls -axiF --color=always $@ | \
			awk '{for (i=1; i<=NF; i+=2) {if ($i==256) {dir=$(i+1); gsub(/\x1B\[[0-9;]*[a-zA-Z]/,"", dir); \
			printf "\033[4;36m"dir"\t\033[m"} else {printf "%s\t", $(i+1)}}; printf "\n"}'
		# ls -axiF --color=always $@ | awk '{for (i=1; i<=NF; i++) {if ($i==256) {$0=gensub(/[^[:blank:]]+/, "\033[4m"$(i+1)"\033[m", i+1)}; $0=gensub(/[^[:blank:]]+/, "\t", i); }; print}'
	else
		\ls -axF --color=always $@
	fi
}

# not work with -R
function ll-btrfs()
{
	local p="."
	local i=1
	while [ $i -le $# ];
	do
		if echo ${@: $i:1} | grep -qv "-"; then
			p=${@: $i:1}
			break
		fi
		i=$(( $i + 1 ))
	done

	local fs=$(stat -f -c %T $p)

	# mark subvol with subvol id
	if [ $fs == 'btrfs' ]; then
		\ls -axFlhi --color=always $@ | \
		# awk '{if(NF>2) {{if ($1==256) {$1="SUB "} else {$1="    "}; print}} else {print}}'
		# awk -v "p=$p" '{if(NF>2) {{if ($1==256) {v="SUBVOL\t"} else {v="\t"}; {print gensub (/[^[:blank:]]+/, v, 1)}}} else {print}}'
		# awk -v "p=$p" '{if(NF>2) {{if ($1==256) {dir=$10; gsub(/\x1B\[[0-9;]*[a-zA-Z]/,"", dir); dir2="\033[4m"$10"\033[m"; "btrfs ins rootid " p"/"dir | getline id; v=""id"\t"} else {v="\t"; dir2=$10}; {a=gensub(/[^[:blank:]]+/, v, 1); b=gensub(/[^[:blank:]]+/, dir2, 10, a); print b}}} else {print}}'
			awk -v "p=$p" '{if(NR>1) {if ($1==256) {dir=$NF; gsub(/\x1B\[[0-9;]*[a-zA-Z]/,"", dir); dir2="\033[4;36m"dir"\033[m"; \
			id="SUB"; "btrfs ins rootid " p"/"dir " 2>/dev/null" | getline id; v=""id"\t"} else {v="\t"; dir2=$NF}; \
			{a=gensub(/[^[:blank:]]+/, dir2, NF); b=gensub(/[^[:blank:]]+/, v, 1, a); print b}} else {print}}'
	else
		\ls -axFlh --color=always $@
	fi
}

function tree-btrfs()
{
	local fs=$(get_fs $@)
	if [ $fs == 'btrfs' ]; then
		\tree -C --inodes $@ | \
			awk '{match($0, /\[[ ]+([0-9]+)][ ]+(.+)/, temp); if (temp[1]==256) {a=gensub(/\x1B\[[0-9;]*[a-zA-Z]/,"","g",temp[2]);a="\033[4;36m"a"\033[m"} else {a=temp[2]};\
			$0=gensub(/\[[ ]+[0-9]+][ ]+.+/,a, 1); print}'
	else
		\tree -C $@
	fi
}

function exa-btrfs-ll()
{
	local p="."
	local i=1
	while [ $i -le $# ];
	do
		if echo ${@: $i:1} | grep -qv "-"; then
			p=${@: $i:1}
			break
		fi
		i=$(( $i + 1 ))
	done

	local fs=$(stat -f -c %T $p)
	if [ $fs == 'btrfs' ]; then
		\exa -alhgHTi -L=1 --git --color=always $@ | \
		# awk -v "p=$p" '{inode=gensub(/\x1B\[[0-9;]*[a-zA-Z]/,"","g",$1); if(inode==256) {dir=$NF; gsub(/\x1B\[[0-9;]*[a-zA-Z]/,"", dir); dir2="\033[4;36m"dir"\033[m"; "btrfs ins rootid " p"/"dir | getline id; v=""id"\t"} else {v="\t"; dir2=$NF}; {a=gensub(/[^[:blank:]]+/, dir2, NF); b=gensub(/[^[:blank:]]+/, v, 1, a); print b}}'
			awk -v "p=$p" '{inode=gensub(/\x1B\[[0-9;]*[a-zA-Z]/,"","g",$1); if(inode==256) {dir=$NF; gsub(/\x1B\[[0-9;]*[a-zA-Z]/,"", dir); dir2="\033[4;36m"dir"\033[m"; \
			if (NR==2) {id="SUB"; "btrfs ins rootid " dir " 2>/dev/null" | getline id} else {id="SUB"; "btrfs ins rootid " p"/"dir " 2>/dev/null" | getline id}; v=""id"\t"} else {v="\t"; dir2=$NF}; \
			{a=gensub(/[^[:blank:]]+/, dir2, NF); b=gensub(/[^[:blank:]]+/, v, 1, a); print b}}'
	else
		\exa -alhgHT --git --color=always $@
	fi
}

function exa-btrfs-tree()
{
	local p="."
	local i=1
	while [ $i -le $# ];
	do
		if echo ${@: $i:1} | grep -qv "-"; then
			p=${@: $i:1}
			break
		fi
		i=$(( $i + 1 ))
	done

	local fs=$(stat -f -c %T $p)
	if [ $fs == 'btrfs' ]; then
		\exa -alhgHTi --git --color=always $@ | \
			awk -v "p=$p" '{inode=gensub(/\x1B\[[0-9;]*[a-zA-Z]/,"","g",$1); if(inode==256) {dir=$NF; gsub(/\x1B\[[0-9;]*[a-zA-Z]/,"", dir); dir2="\033[4;36m"dir"\033[m"; \
			v="SUB\t"} else {v="\t"; dir2=$NF}; \
			{a=gensub(/[^[:blank:]]+/, dir2, NF); b=gensub(/[^[:blank:]]+/, v, 1, a); print b}}'
	else
		\exa -alhgHT --git --color=always $@
	fi
}

function apply-patchwork()
{
	set -o pipefail

	cat /tmp/btrfs.list | \
		fzf --vi-mode --no-sort --reverse --tac --multi --bind "ctrl-n:preview-down" --bind "ctrl-m:preview-up" \
		--preview "(echo {} | cut -d ' ' -f 1 | xargs  pwclient view | colordiff)" | \
		tac | cut -d ' ' -f 1 | \
		xargs pwclient git-am

		# --preview "echo {} | cut -d ' ' -f 1 | xargs sh -c 'html2text "https://patchwork.kernel.org/patch/{}/"' | less" | \
}
